Tree_Coverage_Radius$Tree_Coverage_200m_Perc <- (Tree_Coverage_Radius$`Tree Coverage 200m`/Tree_Coverage_Radius$`Total Area`)
Tree_Coverage_Radius$Tree_Coverage_400m_Perc <- (Tree_Coverage_Radius$`Tree Coverage 400m`/Tree_Coverage_Radius$`Total Area`)
Tree_Coverage_Radius$Tree_Coverage_600m_Perc <- (Tree_Coverage_Radius$`Tree Coverage 600m`/Tree_Coverage_Radius$`Total Area`)
Tree_Coverage_Radius <- Tree_Coverage_Radius %>% dplyr::select(-`Total Area`)
which(is.na(Tree_Coverage_Radius))
which(Tree_Coverage_Radius == "-")
which(Tree_Coverage_Radius == "NaN")
which(Tree_Coverage_Radius == "NA")
which(Tree_Coverage_Radius == "Inf")
Database <- read.csv("D:/SMU/Ph.D/Data/Census Track/Database.12.15.2022.csv")
Database <- Database %>% dplyr::select(c(CensusTract, Crime.Count, Total.population, Sex.ratio, Total.Population.Median.age, Higher.Education.Percentage, Median.household.income  , High.Blood.Pressure, Asthma, Coronary.Heart.Disease,  Diabetes, High.Cholesterol,  Not.Good.Mental.Health, Obesity, Depression,  Physical.Helath.Not.Good, No.physical.activity, UTC_Perc, WhitePerc, AfricanAmericanPerc, HispanicPerc,Percentage.using.public.transportation, Smoking, GINI.index))
Database <- Reduce(function(x, y) merge(x, y, by = "CensusTract",all=TRUE), list(Database,  Tree_Park_Trail, Tree_Coverage_Radius, Update_Crime))
Database <- Database  %>% mutate_at(vars((colnames(Database))),funs(as.numeric(as.character(.))))
Database$CrimeRate <- Database$Crime.Count/Database$Total.population
Database$CrimeRate_updated <- Database$crime_count/Database$Total.population
Database$CrimeRate_cpal <- Database$crime_count_CPAL/Database$Total.population
#Database <- merge(Database, Tracts_old, by = "CensusTract")
View(Database)
mean(Database$Total.population)
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(tidyverse)
library(doParallel)
library(R.utils)
options(digits = 7)
registerDoParallel()
getDoParWorkers()
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.09.csv")
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.02.csv")
weekly_PAI
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.02.csv")
weekly_PAI
weekly <- weekly_PAI %>% dplyr::filter(week != "08/01-01/01" & week != "08/01-12/25")
total <- weekly_PAI %>% dplyr::filter(week == "08/01-01/01")
total_minus_one_week <- weekly_PAI %>% dplyr::filter(week == "08/01-12/25")
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.02.csv")
weekly <- weekly_PAI %>% dplyr::filter(week != "08/01-01/01" & week != "08/01-12/25")
total <- weekly_PAI %>% dplyr::filter(week == "08/01-01/01")
total_minus_one_week <- weekly_PAI %>% dplyr::filter(week == "08/01-12/25")
pai_perc <- function(division){
totalPAI <- total$HR_PAI[total$Division == division]
total_minusone_PAI <- total_minus_one_week$HR_PAI[total$Division == division]
round((totalPAI - total_minusone_PAI)/total_minusone_PAI*100,1) }
y_loc <- function(division){ total$HR_PAI[total$Division == division] }
data_text <- data.frame(label = c(paste(pai_perc("Central"), "%"), paste(pai_perc("North Central"), "%"), paste(pai_perc("North East"), "%"),
paste(pai_perc("North West"), "%"), paste(pai_perc("South Central"), "%"), paste(pai_perc("South East"), "%"),
paste(pai_perc("South West"), "%")),  # Create data for text
Division = c("Central", "North Central", "North East", "North West", "South Central", "South East", "South West"),
x = c(2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5),
y = c(y_loc("Central")+2, y_loc("North Central")+2, y_loc("North East")+2,
y_loc("North West")+2, y_loc("South Central")+2, y_loc("South East")+2,
y_loc("South West")+2))
ggplot(weekly, aes(x=week, group = 1)) +
geom_line(aes(y = HR_PAI, color = "High Risk PAI")) +
geom_line(aes(y = Catchment_PAI, color="Catchment PAI"), linetype="twodash") +
facet_wrap(~Division) + theme(axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x   = element_blank()) +
ylab("PAI") + ggtitle("High Risk PAI versus Catchment PAI")  +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "Central"],Division="Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North Central"],Division="North Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North East"],Division="North East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North West"],Division="North West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South Central"],Division="South Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South East"],Division="South East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South West"],Division="South West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_text(data = data_text, mapping = aes(x = x, y = y, label = label), size = 4, color = "purple")
ggplot(weekly, aes(x=week, group = 1)) +
geom_line(aes(y = HR_PAI, color = "High Risk PAI")) +
geom_line(aes(y = Catchment_PAI, color="Catchment PAI"), linetype="twodash") +
facet_wrap(~Division) + theme(axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x   = element_blank()) +
ylab("PAI") + ggtitle("High Risk PAI versus Catchment PAI")  +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "Central"],Division="Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North Central"],Division="North Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North East"],Division="North East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North West"],Division="North West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South Central"],Division="South Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South East"],Division="South East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South West"],Division="South West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_text(data = data_text, mapping = aes(x = x, y = y, label = label), size = 4, color = "purple")
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.09.csv")
weekly_PAI
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.09.csv")
weekly <- weekly_PAI %>% dplyr::filter(week != "08/01-01/01" & week != "08/01-01/08")
total <- weekly_PAI %>% dplyr::filter(week == "08/01-01/08")
total_minus_one_week <- weekly_PAI %>% dplyr::filter(week == "08/01-01/01")
pai_perc <- function(division){
totalPAI <- total$HR_PAI[total$Division == division]
total_minusone_PAI <- total_minus_one_week$HR_PAI[total$Division == division]
round((totalPAI - total_minusone_PAI)/total_minusone_PAI*100,1) }
y_loc <- function(division){ total$HR_PAI[total$Division == division] }
data_text <- data.frame(label = c(paste(pai_perc("Central"), "%"), paste(pai_perc("North Central"), "%"), paste(pai_perc("North East"), "%"),
paste(pai_perc("North West"), "%"), paste(pai_perc("South Central"), "%"), paste(pai_perc("South East"), "%"),
paste(pai_perc("South West"), "%")),  # Create data for text
Division = c("Central", "North Central", "North East", "North West", "South Central", "South East", "South West"),
x = c(2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5),
y = c(y_loc("Central")+2, y_loc("North Central")+2, y_loc("North East")+2,
y_loc("North West")+2, y_loc("South Central")+2, y_loc("South East")+2,
y_loc("South West")+2))
ggplot(weekly, aes(x=week, group = 1)) +
geom_line(aes(y = HR_PAI, color = "High Risk PAI")) +
geom_line(aes(y = Catchment_PAI, color="Catchment PAI"), linetype="twodash") +
facet_wrap(~Division) + theme(axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x   = element_blank()) +
ylab("PAI") + ggtitle("High Risk PAI versus Catchment PAI")  +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "Central"],Division="Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North Central"],Division="North Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North East"],Division="North East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North West"],Division="North West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South Central"],Division="South Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South East"],Division="South East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South West"],Division="South West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_text(data = data_text, mapping = aes(x = x, y = y, label = label), size = 4, color = "purple")
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(tidyverse)
library(doParallel)
library(R.utils)
options(digits = 7)
registerDoParallel()
getDoParWorkers()
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.09.csv")
weekly_PAI
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.16.csv")
weekly_PAI
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.16.csv")
weekly <- weekly_PAI %>% dplyr::filter(week != "08/01-01/15" & week != "08/01-01/08")
total <- weekly_PAI %>% dplyr::filter(week == "08/01-01/15")
total_minus_one_week <- weekly_PAI %>% dplyr::filter(week == "08/01-01/08")
pai_perc <- function(division){
totalPAI <- total$HR_PAI[total$Division == division]
total_minusone_PAI <- total_minus_one_week$HR_PAI[total$Division == division]
round((totalPAI - total_minusone_PAI)/total_minusone_PAI*100,1) }
y_loc <- function(division){ total$HR_PAI[total$Division == division] }
data_text <- data.frame(label = c(paste(pai_perc("Central"), "%"), paste(pai_perc("North Central"), "%"), paste(pai_perc("North East"), "%"),
paste(pai_perc("North West"), "%"), paste(pai_perc("South Central"), "%"), paste(pai_perc("South East"), "%"),
paste(pai_perc("South West"), "%")),  # Create data for text
Division = c("Central", "North Central", "North East", "North West", "South Central", "South East", "South West"),
x = c(2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5),
y = c(y_loc("Central")+2, y_loc("North Central")+2, y_loc("North East")+2,
y_loc("North West")+2, y_loc("South Central")+2, y_loc("South East")+2,
y_loc("South West")+2))
ggplot(weekly, aes(x=week, group = 1)) +
geom_line(aes(y = HR_PAI, color = "High Risk PAI")) +
geom_line(aes(y = Catchment_PAI, color="Catchment PAI"), linetype="twodash") +
facet_wrap(~Division) + theme(axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x   = element_blank()) +
ylab("PAI") + ggtitle("High Risk PAI versus Catchment PAI")  +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "Central"],Division="Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North Central"],Division="North Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North East"],Division="North East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North West"],Division="North West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South Central"],Division="South Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South East"],Division="South East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South West"],Division="South West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_text(data = data_text, mapping = aes(x = x, y = y, label = label), size = 4, color = "purple")
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(tidyverse)
library(doParallel)
library(R.utils)
options(digits = 7)
registerDoParallel()
getDoParWorkers()
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.30.csv")
weekly_PAI
weekly_PAI <- read.csv("PAI data/weeklyPAI_until_2023.01.30.csv")
weekly <- weekly_PAI %>% dplyr::filter(week != "08/01-01/29" & week != "08/01-01/22")
total <- weekly_PAI %>% dplyr::filter(week == "08/01-01/29")
total_minus_one_week <- weekly_PAI %>% dplyr::filter(week == "08/01-01/22")
pai_perc <- function(division){
totalPAI <- total$HR_PAI[total$Division == division]
total_minusone_PAI <- total_minus_one_week$HR_PAI[total$Division == division]
round((totalPAI - total_minusone_PAI)/total_minusone_PAI*100,1) }
y_loc <- function(division){ total$HR_PAI[total$Division == division] }
data_text <- data.frame(label = c(paste(pai_perc("Central"), "%"), paste(pai_perc("North Central"), "%"), paste(pai_perc("North East"), "%"),
paste(pai_perc("North West"), "%"), paste(pai_perc("South Central"), "%"), paste(pai_perc("South East"), "%"),
paste(pai_perc("South West"), "%")),  # Create data for text
Division = c("Central", "North Central", "North East", "North West", "South Central", "South East", "South West"),
x = c(2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5),
y = c(y_loc("Central")+2, y_loc("North Central")+2, y_loc("North East")+2,
y_loc("North West")+2, y_loc("South Central")+2, y_loc("South East")+2,
y_loc("South West")+2))
ggplot(weekly, aes(x=week, group = 1)) +
geom_line(aes(y = HR_PAI, color = "High Risk PAI")) +
geom_line(aes(y = Catchment_PAI, color="Catchment PAI"), linetype="twodash") +
facet_wrap(~Division) + theme(axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x   = element_blank()) +
ylab("PAI") + ggtitle("High Risk PAI versus Catchment PAI")  +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "Central"],Division="Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North Central"],Division="North Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North East"],Division="North East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "North West"],Division="North West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South Central"],Division="South Central"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South East"],Division="South East"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_hline(data = data.frame(yint=total$HR_PAI[total$Division == "South West"],Division="South West"),
aes(yintercept = yint), linetype = "dotted", color = "purple", size=1) +
geom_text(data = data_text, mapping = aes(x = x, y = y, label = label), size = 4, color = "purple")
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(tidyverse)
library(doParallel)
library(R.utils)
options(digits = 7)
registerDoParallel()
getDoParWorkers()
c_nh <- read.csv("data/nibrs_crime_nh.csv")
c_nh
View(c_nh)
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 100,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
library(reactable)
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 100,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
library(htmltools)
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 100,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 100,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 300,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 250,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 200,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
nibrs_crime_category_nh <- c_nh %>% dplyr:: select("NIRBRS.Crime",grep("Frequency...", names(c_nh)))
View(nibrs_crime_category_nh)
grep("Frequency...", names(c_nh)
grep("Frequency...", names(c_nh))
names(c_nh)
nibrs_crime_category_nh <- import("data/nibrs_crime_category_nh.csv")
nibrs_crime_category_nh <- read.csv("data/nibrs_crime_category_nh.csv")
View(nibrs_crime_category_nh)
library(htmltools)
library(rio)
nibrs_crime_category_nh <- import(paste0("data/nibrs_crime_category_nh.csv"))
View(nibrs_crime_category_nh)
c_nh <- import("data/nibrs_crime_nh.csv")
View(c_nh)
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 200,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
c_zip <- import("data/nibrs_crime_zip.csv")
table_out <- reactable(
c_zip,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 200,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
c_nh <- import("data/nibrs_crime_category_nh.csv")
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 200,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
c_zip <- import("data/nibrs_crime_category_zip.csv")
table_out <- reactable(
c_zip,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 200,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in each neighborhood")))
withtitle
c_nh <- import("data/nibrs_crime_nh.csv")
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 200,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by type in each neighborhood")), size =4)
withtitle
c_nh <- import("data/nibrs_crime_nh.csv")
table_out <- reactable(
c_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 200,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by type in each neighborhood")),
font=list(size=5))
withtitle
