#nibrs_crime_category_nh <- data.frame(nibrs_crime_category_nh)
a <- colSums(Filter(is.numeric, nibrs_crime_category_nh))
a <- c("Total Count", a)
nibrs_crime_category_nh[21,] <- a
table_out <- reactable(
nibrs_crime_category_nh,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 200,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Crime (group A) frequency by category in the top 5 neighborhoods with the most crimes")),
font=list(size=5))
withtitle
nibrs_crime_nh_viz <- nibrs_crime_nh %>% dplyr::select("NIRBRS Crime", `Frequency at Tenth Street`) %>%
arrange(desc(`Frequency at Tenth Street`)) %>% slice(1:5)
nibrs_crime_nh_viz <- nibrs_crime_category_nh %>% dplyr::select("NIRBRS Crime", `Frequency at Tenth Street`) %>%
arrange(desc(`Frequency at Tenth Street`)) %>% slice(1:5)
View(nibrs_crime_category_nh)
nibrs_crime_nh_viz <- nibrs_crime_category_nh %>% dplyr::select("NIRBRS Crime Category", `Frequency at Tenth Street`) %>%
arrange(desc(`Frequency at Tenth Street`)) %>% slice(1:5)
names(nibrs_crime_category_nh)
nibrs_crime_nh_viz <- nibrs_crime_category_nh %>% dplyr::select("NIRBRS Crime Category", `Frequency at Vickery Meadow(s)`) %>%
arrange(desc(`Frequency at Vickery Meadow(s)`)) %>% slice(1:5)
ggplot(nibrs_crime_nh_viz, aes(x=`NIRBRS Crime`, y=`Frequency at Vickery Meadow(s)`)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1, size = 8)) +
geom_text(aes(label = `Frequency at Vickery Meadow(s)`), vjust = 1.5, colour = "white") +
ggtitle("Crime Frequency at Vickery Meadow(s)") + ylab("Frequency")
nibrs_crime_nh_viz <- nibrs_crime_category_nh %>% dplyr::select("NIRBRS Crime Category", `Frequency at Vickery Meadow(s)`) %>%
arrange(desc(`Frequency at Vickery Meadow(s)`)) %>% slice(1:5)
ggplot(nibrs_crime_nh_viz, aes(x=`NIRBRS Crime Category`, y=`Frequency at Vickery Meadow(s)`)) +
geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 30, hjust = 1, size = 8)) +
geom_text(aes(label = `Frequency at Vickery Meadow(s)`), vjust = 1.5, colour = "white") +
ggtitle("Crime Frequency at Vickery Meadow(s)") + ylab("Frequency")
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(tidyverse)
library(doParallel)
library(R.utils)
library(reactable)
library(rio)
library(htmltools)
options(digits = 7)
registerDoParallel()
getDoParWorkers()
libDB <- "D:/SMU/Ph.D/CPAL/"
masterODP_CPAL <- import("D:/SMU/Ph.D/CPAL/Open Data Portal Incidents/Data/Incidents/Processed Data/Dallas Police Incidents - All Incidents Since Aug 2019.csv")
neighborhood <- st_read(paste0(libDB, "New Model Development/Geopackage/Neighborhoods.gpkg"), layer = "bc_neighborhoods") %>%
st_transform(crs = 2276)
library(sf)
neighborhood <- st_read(paste0(libDB, "New Model Development/Geopackage/Neighborhoods.gpkg"), layer = "bc_neighborhoods") %>%
st_transform(crs = 2276)
# Convert dataframe into sf geographic files with 4202 projection
masterODP_CPAL_sf <- st_as_sf(x = masterODP_CPAL, coords = c(x = "x_coordinate", y = "y_coordinate"), crs = 2276)
masterODP_CPAL_sf <- masterODP_CPAL_sf[neighborhood,]
masterODP_CPAL_sf <- masterODP_CPAL_sf[neighborhood,]
names(nibrs_crime_category_nh)
neinames <- c("Oak Lawn", "Uptown", "Pleasant Grove", "Bachman", "Vickery Meadow(s)")
for (i in neinames){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == i)
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>%
relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
png(file=paste("C:/Users/48110417/Desktop/",i,".png",sep = ""),
width=600, height=450)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", i)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
print(p)
dev.off()
}
for (i in neinames){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == i)
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>% relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
png(file=paste("C:/Users/48110417/Desktop/",i,".png",sep = ""),
width=600, height=450)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", i)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
print(p)
dev.off()
}
for (i in neinames){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == i)
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>% relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
png(file=paste("C:/Users/48110417/Desktop/",i,".png",sep = ""),
width=600, height=450)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", i)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
print(p)
#dev.off()
}
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(tidyverse)
library(doParallel)
library(R.utils)
library(reactable)
library(rio)
library(sf)
library(htmltools)
options(digits = 7)
registerDoParallel()
getDoParWorkers()
neighborhood <- st_read(paste0(libDB, "New Model Development/Geopackage/Neighborhoods.gpkg"), layer = "bc_neighborhoods") %>%
st_transform(crs = 2276)
# Convert dataframe into sf geographic files with 4202 projection
masterODP_CPAL_sf <- st_as_sf(x = masterODP_CPAL, coords = c(x = "x_coordinate", y = "y_coordinate"), crs = 2276)
masterODP_CPAL_sf <- masterODP_CPAL_sf[neighborhood,]
neinames <- c("Oak Lawn", "Uptown", "Pleasant Grove", "Bachman", "Vickery Meadow(s)")
for (i in neinames){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == i)
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>% relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
png(file=paste("C:/Users/48110417/Desktop/",i,".png",sep = ""),
width=600, height=450)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", i)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
print(p)
#dev.off()
}
for (i in neinames){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == i)
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>% relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
png(file=paste("C:/Users/48110417/Desktop/",i,".png",sep = ""),
width=600, height=450)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", i)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
print(p)
p
#dev.off()
}
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == "Uptown")
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>% relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
png(file=paste("C:/Users/48110417/Desktop/",i,".png",sep = ""),
width=600, height=450)
neinames <- c("Oak Lawn", "Uptown", "Pleasant Grove", "Bachman", "Vickery Meadow(s)")
for (i in neinames){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == i)
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>% relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", i)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
print(p)
p
#dev.off()
}
for (i in neinames){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == i)
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>% relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", i)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
print(p)
#dev.off()
}
for (i in neinames){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == i)
masterODP_CPAL_sf_subset <- masterODP_CPAL_sf[neighborhood_subset,]
a <- ((table(masterODP_CPAL_sf_subset$Year, masterODP_CPAL_sf_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>% relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", i)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)
print(p)
}
nibrs_crime_category_nh <- import(paste0(libDB, "New Model Development/Neighborhood Crime Dashboard/nibrs_crime_category_nh.csv"))
nibrs_crime_category_nh <- nibrs_crime_category_nh %>% dplyr:: select("NIRBRS Crime Category",grep("Frequency at", names(nibrs_crime_category_nh)))
names(nibrs_crime_category_nh) <- gsub("Frequency at ", "", names(nibrs_crime_category_nh))
nibrs_crime_category_nh <- nibrs_crime_category_nh %>%
select("NIRBRS Crime Category", where(~ is.numeric(.) && sum(.) >= 1100))
for (i in names(nibrs_crime_category_nh[2:length(nibrs_crime_category_nh)])){
print(i)
nibrs_crime_nh_month_viz <- nibrs_crime_category_nh %>% dplyr::select("NIRBRS Crime Category", i) %>%
arrange(desc(nibrs_crime_category_nh[[i]])) %>% slice(1:5)
write.xlsx(nibrs_crime_nh_month_viz, file = "Neighboorhood_Results.xlsx",
sheetName = i,append=TRUE, row.names=F)
}
for (i in names(nibrs_crime_category_nh[2:length(nibrs_crime_category_nh)])){
print(i)
nibrs_crime_nh_month_viz <- nibrs_crime_category_nh %>% dplyr::select("NIRBRS Crime Category", i) %>%
arrange(desc(nibrs_crime_category_nh[[i]])) %>% slice(1:5)
print(nibrs_crime_nh_month_viz)
#write.xlsx(nibrs_crime_nh_month_viz, file = "Neighboorhood_Results.xlsx",
#sheetName = i,append=TRUE, row.names=F)
}
nibrs_crime_category_nh <- import(paste0(libDB, "New Model Development/Neighborhood Crime Dashboard/nibrs_crime_category_nh.csv"))
nibrs_crime_category_nh <- nibrs_crime_category_nh %>% dplyr:: select("NIRBRS Crime Category",grep("Frequency at", names(nibrs_crime_category_nh)))
names(nibrs_crime_category_nh) <- gsub("Frequency at ", "", names(nibrs_crime_category_nh))
nibrs_crime_category_nh <- nibrs_crime_category_nh %>%
select("NIRBRS Crime Category", where(~ is.numeric(.) && sum(.) >= 1100))
for (i in names(nibrs_crime_category_nh[2:length(nibrs_crime_category_nh)])){
nibrs_crime_nh_month_viz <- nibrs_crime_category_nh %>% dplyr::select("NIRBRS Crime Category", i) %>%
arrange(desc(nibrs_crime_category_nh[[i]])) %>% slice(1:5)
print(nibrs_crime_nh_month_viz)
#write.xlsx(nibrs_crime_nh_month_viz, file = "Neighboorhood_Results.xlsx",
#sheetName = i,append=TRUE, row.names=F)
}
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(tidyverse)
library(doParallel)
library(R.utils)
library(reactable)
library(rio)
library(sf)
library(htmltools)
options(digits = 7)
registerDoParallel()
getDoParWorkers()
libDB <- "D:/SMU/Ph.D/CPAL/"
masterODP_CPAL <- import("D:/SMU/Ph.D/CPAL/Open Data Portal Incidents/Data/Incidents/Processed Data/Dallas Police Incidents - All Incidents Since Aug 2019.csv")
arrests <- import("D:/SMU/Ph.D/CPAL/Open Data Portal Incidents/Data/Incidents/Processed Data/Dallas Police Arrests - All Arrests.csv") %>%
dplyr::select(incidentnum, arrestnumber, ararrestdate, ararresttime, arpremises)
arrests <- import("D:/SMU/Ph.D/CPAL/Open Data Portal Incidents/Data/Incidents/Processed Data/Dallas Police Arrests - All Arrests.csv") %>%
dplyr::select(incidentnum, arrestnumber, ararrestdate, ararresttime, arpremises)
neighborhood <- st_read(paste0(libDB, "New Model Development/Geopackage/Neighborhoods.gpkg"), layer = "bc_neighborhoods") %>%
st_transform(crs = 2276)
neighborhood <- st_read(paste0(libDB, "New Model Development/Geopackage/Neighborhoods.gpkg"), layer = "bc_neighborhoods") %>%
st_transform(crs = 2276)
firearm <- c("Handgun", "Rifle","Firearm (Type Not Stated)", "Assault Weapon", "Unknown Type Gun", "Other/Unknown Gun", "Shotgun", "Other Gun", "Other Firearm")
vgc_type <- c("AGG ASSAULT - NFV", "MURDER & NONNEGLIGENT MANSLAUGHTER", "NEGLIGENT MANSLAUGHTER")
masterODP_arrests <- masterODP_CPAL %>% left_join(., arrests) %>%
mutate(Date = as.Date(Date),
Time = lubridate::hm(Time),
Year = year(Date),
Month = month(Date),
Day = day(Date),
division = str_to_title(division),
crime_category = as.factor(nibrs_crime_category),
crime = as.factor(nibrs_crime),
Weekday = wday(Date),
DateTime = format(paste(Date, Time), format="%Y-%m-%d %H:%M:%S"),
vgc_flag = ifelse(nibrs_crime %in% vgc_type & Firearm == 1, 1, 0)) %>%
mutate(crime_title = ifelse(crime == "MURDER & NONNEGLIGENT MANSLAUGHTER", "Murder & Nonnegligent Manslaughter",
ifelse(crime == "VIOLENT GUN CRIME", "Violent Gun Crime",
ifelse(crime == "AGG ASSAULT - NFV", "Aggravated Assault (NFV)",
ifelse(crime == "ROBBERY-BUSINESS", "Robbery (Business)",
ifelse(crime == "ROBBERY-INDIVIDUAL", "Robbery (Individual)",
ifelse(crime == "BURGLARY-RESIDENCE", "Burglary (Residence)",
ifelse(crime == "BURGLARY-BUSINESS", "Burglary (Business)",
"ERROR"
))))))))  %>%
select(incidentnum:premise, incident_address:time1, reporteddate, involvement:ro1name, status, mo, offensecode:nibrs_type, zip_code:geocoded_column.longitude, taag:compsex, weaponused, tot_victims:crime_title) %>%
#filter(crime %in% c("MURDER & NONNEGLIGENT MANSLAUGHTER", "AGG ASSAULT - NFV", "ROBBERY-BUSINESS", "ROBBERY-INDIVIDUAL", "BURGLARY-RESIDENCE", "BURGLARY-BUSINESS")) %>%
mutate(ArDate = as.Date(ararrestdate),
ArLength = time_length(ArDate-Date, unit = "days"),
ArOccur = ifelse(is.na(arrestnumber), "NO", "YES"))
library(chron)
library(lubridate)
masterODP_arrests <- masterODP_CPAL %>% left_join(., arrests) %>%
mutate(Date = as.Date(Date),
Time = lubridate::hm(Time),
Year = year(Date),
Month = month(Date),
Day = day(Date),
division = str_to_title(division),
crime_category = as.factor(nibrs_crime_category),
crime = as.factor(nibrs_crime),
Weekday = wday(Date),
DateTime = format(paste(Date, Time), format="%Y-%m-%d %H:%M:%S"),
vgc_flag = ifelse(nibrs_crime %in% vgc_type & Firearm == 1, 1, 0)) %>%
mutate(crime_title = ifelse(crime == "MURDER & NONNEGLIGENT MANSLAUGHTER", "Murder & Nonnegligent Manslaughter",
ifelse(crime == "VIOLENT GUN CRIME", "Violent Gun Crime",
ifelse(crime == "AGG ASSAULT - NFV", "Aggravated Assault (NFV)",
ifelse(crime == "ROBBERY-BUSINESS", "Robbery (Business)",
ifelse(crime == "ROBBERY-INDIVIDUAL", "Robbery (Individual)",
ifelse(crime == "BURGLARY-RESIDENCE", "Burglary (Residence)",
ifelse(crime == "BURGLARY-BUSINESS", "Burglary (Business)",
"ERROR"
))))))))  %>%
select(incidentnum:premise, incident_address:time1, reporteddate, involvement:ro1name, status, mo, offensecode:nibrs_type, zip_code:geocoded_column.longitude, taag:compsex, weaponused, tot_victims:crime_title) %>%
#filter(crime %in% c("MURDER & NONNEGLIGENT MANSLAUGHTER", "AGG ASSAULT - NFV", "ROBBERY-BUSINESS", "ROBBERY-INDIVIDUAL", "BURGLARY-RESIDENCE", "BURGLARY-BUSINESS")) %>%
mutate(ArDate = as.Date(ararrestdate),
ArLength = time_length(ArDate-Date, unit = "days"),
ArOccur = ifelse(is.na(arrestnumber), "NO", "YES"))
# Keeping only incidents that arrest happened
masterODP_with_arrests <- masterODP_arrests %>% drop_na(arrestnumber)
# Convert dataframe into sf geographic files with 4202 projection
crime_neighbor <- st_as_sf(x = masterODP_arrests, coords = c(x = "x_coordinate", y = "y_coordinate"), crs = 2276)
crime_neighbor <- crime_neighbor[neighborhood,]
dash_func <- function(neighbor_name){
neighborhood_subset <- neighborhood %>% dplyr::filter(NeighName == neighbor_name)
crime_neighbor_subset <- crime_neighbor[neighborhood_subset,]
crime_count <- crime_neighbor_subset %>% dplyr::filter(Year == 2022)
crime_per_month <- round(nrow(crime_count)/12, 0)
crime_per_week <- round(nrow(crime_count)/52, 0)
a <- ((table(crime_neighbor_subset$Year, crime_neighbor_subset$Month)))
b <- data.frame(colMeans(a[2:4,])) %>% mutate(Var1 = "Average", Var2 = c(1:12)) %>% rename(Freq = colMeans.a.2.4.... ) %>%
relocate(Var1, .before = Freq) %>% relocate(Var2, .before = Freq)
a <- data.frame(a) %>% dplyr::filter(Var1 != 2019)
a <- rbind(a,b)
a$Freq[a$Freq == 0] <- NA
data1 <- a %>% dplyr::filter(Var1 == "Average")
data2 <- a %>% dplyr::filter(Var1 == 2022)
p <- ggplot(NULL, aes(Var2, Freq)) +
geom_line(data = data1, aes(color='Last 3 Years', group=1)) +
geom_line(data = data2, aes(color='2022', group=1)) + ylab("Frequency") + xlab("Month") +
ggtitle(paste( "All Crime Incidents per Month at", neighbor_name)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 9)) +
scale_color_manual(name='Legend',
breaks=c('Last 3 Years', '2022'),
values=c('Last 3 Years'='red', '2022'='blue')) + theme(
legend.position = c(0.02, .95),
legend.justification = c("left", "top"),
legend.box.just = "left",
legend.margin = margin(6, 6, 6, 6)
)  +  annotate(geom="text", x=max(as.numeric(data2$Var2)), y=max(as.numeric(data2$Freq), na.rm = T) +4, label=paste(crime_per_month, "Crime Per Month in 2022"),color="red", size = 3, hjust=1) +
annotate(geom="text", x=max(as.numeric(data2$Var2)), y=max(as.numeric(data2$Freq), na.rm = T) +16, label=paste(crime_per_week, "Crime Per Week in 2022"),color="red", size = 3, hjust=1)
#print(p)
table_crime <- crime_neighbor_subset %>% dplyr::filter(Year != 2019)
top_incidents_tab <- data.frame(table(table_crime$nibrs_crime_category))
top_incidents_tab <- top_incidents_tab  %>% arrange(desc(`Freq`)) %>% slice(1:5) %>% rename(`Crime Type` = Var1, "Frequency" = Freq )
table_out <- reactable(
top_incidents_tab,
defaultColDef = colDef(
header = function(value) gsub(".", " ", value, fixed = TRUE),
cell = function(value) format(value, nsmall = 1),
align = "center",
minWidth = 100,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
Species = colDef(minWidth = 200)  # overrides the default
),
bordered = TRUE,
highlight = TRUE,
filterable = TRUE,
searchable = TRUE
)
withtitle <- htmlwidgets::prependContent(table_out,
h2(class = "title", paste("Top 10 Crime Types In the Last Three Years at", neighbor_name)))
arrests <- crime_neighbor_subset %>% drop_na(arrestnumber)
month_tbl <- arrests %>%
group_by(Year, Month) %>%
summarize(arrestCount = n()) %>%
ungroup(.) %>%
mutate(Date = as.Date(paste0(Year, "-", Month, "-01")),
monthAvg = zoo::rollmean(arrestCount, k = 3, fill = NA))
p2 <- month_tbl %>% ggplot(aes(x = Date, y = arrestCount)) +
geom_col(fill = "#595959",
alpha = 0.5) +
geom_line(aes(y = monthAvg),
color = "#ffffff",
size = 2) +
geom_line(aes(y = monthAvg),
color = "#e98816",
size = 1) +
labs(
title = paste( "Arrests by Month at", neighbor_name),
subtitle = "Relative to 3 Month Average",
x = "",
y = "",
color = 'VARIABLE'
)
#print(p2)
return(list(withtitle, p, p2))
}
dash_func("Oak Lawn")
dash_func("Oak Lawn")
dash_func("Oak Lawn")
